import{_ as n,c as a,o,a3 as t}from"./chunks/framework.qnZckW2M.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Essay/前端npm常用命令总结.md","filePath":"Essay/前端npm常用命令总结.md","lastUpdated":1719770764000}'),e={name:"Essay/前端npm常用命令总结.md"},l=t('<h2 id="前端npm常用命令总结" tabindex="-1">前端npm常用命令总结 <a class="header-anchor" href="#前端npm常用命令总结" aria-label="Permalink to &quot;前端npm常用命令总结&quot;">​</a></h2><p>npm（Node Package Manager）是Node.js的包管理器，用于安装和管理Node.js的依赖库。以下是一份npm命令的总结文档，涵盖了常用的npm命令及其功能：</p><h3 id="包相关的" tabindex="-1">包相关的 <a class="header-anchor" href="#包相关的" aria-label="Permalink to &quot;包相关的&quot;">​</a></h3><h4 id="安装和卸载包" tabindex="-1">安装和卸载包 <a class="header-anchor" href="#安装和卸载包" aria-label="Permalink to &quot;安装和卸载包&quot;">​</a></h4><ul><li><strong>npm install</strong> ：安装指定名称的包。</li><li><strong>npm install @</strong>：安装指定版本的包。</li><li><strong>npm install -g</strong> ：全局安装一个包。</li><li><strong>npm uninstall</strong> ：卸载一个已安装的包。</li></ul><h4 id="更新包" tabindex="-1">更新包 <a class="header-anchor" href="#更新包" aria-label="Permalink to &quot;更新包&quot;">​</a></h4><ul><li><strong>npm update</strong> ：更新一个已安装的包到最新版本。</li></ul><h4 id="查看包信息" tabindex="-1">查看包信息 <a class="header-anchor" href="#查看包信息" aria-label="Permalink to &quot;查看包信息&quot;">​</a></h4><ul><li><strong>npm list</strong>：列出当前项目已安装的所有包及其依赖关系。</li><li><strong>npm list -g</strong>：查看全局已安装的所有包。</li><li><strong>npm info</strong> ：查看指定包的详细信息。</li></ul><h4 id="管理项目依赖" tabindex="-1">管理项目依赖 <a class="header-anchor" href="#管理项目依赖" aria-label="Permalink to &quot;管理项目依赖&quot;">​</a></h4><ul><li><strong>npm init</strong>：初始化一个新的npm项目，并创建一个package.json文件。</li><li><strong>npm install</strong>：根据package.json文件中的依赖关系安装所有必要的包。</li><li><strong>npm install --save</strong>：安装包并添加到项目的dependencies中。</li><li><strong>npm install --save-dev</strong>：安装包并添加到项目的devDependencies中。</li></ul><h4 id="版本控制" tabindex="-1">版本控制 <a class="header-anchor" href="#版本控制" aria-label="Permalink to &quot;版本控制&quot;">​</a></h4><ul><li><strong>npm version</strong> ：修改package.json中的版本号，并创建一个新的git commit和tag。</li></ul><h4 id="运行脚本" tabindex="-1">运行脚本 <a class="header-anchor" href="#运行脚本" aria-label="Permalink to &quot;运行脚本&quot;">​</a></h4><ul><li><strong>npm run</strong></li></ul><h4 id="其他常用命令" tabindex="-1">其他常用命令 <a class="header-anchor" href="#其他常用命令" aria-label="Permalink to &quot;其他常用命令&quot;">​</a></h4><ul><li><strong>npm link</strong> ：将全局安装的包链接到当前项目。</li><li><strong>npm publish</strong>：发布一个npm包。</li><li><strong>npm cache clean --force</strong>：清理npm的缓存。</li><li><strong>npm search &lt;string/regular-expression&gt;</strong>：在npm仓库中搜索包。</li><li><strong>npm logout</strong>：退出npm的登录状态。</li><li><strong>npm login</strong>：登录npm，输入用户名和密码。</li><li><strong>npm whoami</strong>：查看当前登录的用户名。</li><li><strong>npm dist-tag</strong> ：给包添加或修改发布标签。</li></ul><h3 id="配置相关" tabindex="-1">配置相关 <a class="header-anchor" href="#配置相关" aria-label="Permalink to &quot;配置相关&quot;">​</a></h3><p>npm的配置命令用于设置和调整npm的行为和参数，以满足特定的项目需求或开发环境。以下是一些npm的配置命令的总结：</p><h4 id="查看配置" tabindex="-1">查看配置 <a class="header-anchor" href="#查看配置" aria-label="Permalink to &quot;查看配置&quot;">​</a></h4><ol><li><strong>npm config list</strong>: 显示当前npm的所有配置信息。</li><li><strong>npm config get</strong> : 查看特定配置项的值。例如，<code>npm config get registry</code> 会显示当前设置的npm仓库地址。</li></ol><h4 id="设置配置" tabindex="-1">设置配置 <a class="header-anchor" href="#设置配置" aria-label="Permalink to &quot;设置配置&quot;">​</a></h4><ol><li><strong>npm config set</strong> : 设置特定配置项的值。例如，要设置代理，你可以使用 <code>npm config set proxy http://your-proxy-url:port</code>。</li><li><strong>npm set</strong> : 这是 <code>npm config set</code> 的简写形式，功能相同。</li></ol><h4 id="删除配置" tabindex="-1">删除配置 <a class="header-anchor" href="#删除配置" aria-label="Permalink to &quot;删除配置&quot;">​</a></h4><ol><li><strong>npm config delete</strong> : 删除特定配置项。</li></ol><h4 id="编辑配置" tabindex="-1">编辑配置 <a class="header-anchor" href="#编辑配置" aria-label="Permalink to &quot;编辑配置&quot;">​</a></h4><ol><li><strong>npm config edit</strong>: 直接编辑npm的配置文件（通常是<code>~/.npmrc</code>）。这会打开一个文本编辑器，让你直接修改配置文件。</li></ol><h4 id="其他常用配置" tabindex="-1">其他常用配置 <a class="header-anchor" href="#其他常用配置" aria-label="Permalink to &quot;其他常用配置&quot;">​</a></h4><ol><li><strong>npm config set strict-ssl=false</strong>: 禁用SSL验证，这在某些网络环境下可能有用，但请注意这样做可能会降低安全性。</li><li><strong>npm config set registry</strong> : 设置npm的仓库地址。这可以用于切换到私有仓库或特定的镜像仓库。</li><li><strong>npm config set cafile</strong> : 设置自定义的CA文件路径，用于SSL连接。</li><li><strong>npm config set save=true</strong>: 设置在安装包时自动将其添加到<code>package.json</code>的<code>dependencies</code>中。</li></ol><h4 id="缓存配置" tabindex="-1">缓存配置 <a class="header-anchor" href="#缓存配置" aria-label="Permalink to &quot;缓存配置&quot;">​</a></h4><ol><li><strong>npm cache clean --force</strong>: 清理npm的缓存。<code>--force</code>选项用于强制清理，即使缓存目录被锁定。</li></ol><p>更多命令可以查看：<a href="https://npm.nodejs.cn/cli/v10/commands/npm" target="_blank" rel="noreferrer">https://npm.nodejs.cn/cli/v10/commands/npm</a></p>',32),r=[l];function i(s,c,g,p,m,d){return o(),a("div",null,r)}const f=n(e,[["render",i]]);export{u as __pageData,f as default};
