import{_ as e,c as a,o as t,a3 as s}from"./chunks/framework.qnZckW2M.js";const u=JSON.parse('{"title":"网络层与数据链路层协议","description":"","frontmatter":{"nav":{"title":"计算机网络","order":8},"group":{"title":"计算机网络体系","order":2},"title":"网络层与数据链路层协议","order":3},"headers":[],"relativePath":"KnowledgeBase/FrontEnd/JavaScript/computer-networks/architecture/network-layer-and-data-link-layer-protocol.md","filePath":"KnowledgeBase/FrontEnd/JavaScript/computer-networks/architecture/network-layer-and-data-link-layer-protocol.md","lastUpdated":1719742520000}'),l={name:"KnowledgeBase/FrontEnd/JavaScript/computer-networks/architecture/network-layer-and-data-link-layer-protocol.md"},i=s(`<h1 id="网络层与数据链路层协议" tabindex="-1">网络层与数据链路层协议 <a class="header-anchor" href="#网络层与数据链路层协议" aria-label="Permalink to &quot;网络层与数据链路层协议&quot;">​</a></h1><p>网络层用来处理在网络上流动的数据包（数据包：网络上传输的最小数据单位）。网络层规定在众多选项中通过怎样的路径（传输线路）到达对方的计算机，把数据包传输给对方。</p><p>该层中最突出的协议是 Internet Protocol（IP），因此该层也称为 IP 层。IP 的核心是两个主要功能：<span style="font-weight:bold;color:red;">地址</span> 和 <span style="font-weight:bold;color:red;">路由</span>。</p><p>IP 协议是 TCP / IP 协议的核心，所有的 TCP、UDP、IMCP、IGMP 的数据都以 IP 数据格式传输。要注意的是，IP 不是可靠的协议，这是指 IP 协议没有提供一种数据未传达以后的处理机制，这被认为是上层协议：TCP 或 UDP 要做的事情。</p><p>网络层功能：</p><ul><li>IP 寻址</li><li>选路</li><li>封装打包</li><li>分片</li></ul><p>数据链路层功能：</p><ul><li>逻辑链路控制</li><li>媒体访问控制</li><li>封装链路层帧</li><li>MAC 寻址</li><li>差错检测与处理</li><li>定义物理层标准</li></ul><h2 id="ipv4-分类地址" tabindex="-1">IPv4 分类地址 <a class="header-anchor" href="#ipv4-分类地址" aria-label="Permalink to &quot;IPv4 分类地址&quot;">​</a></h2><p>在数据链路层中我们一般通过 MAC 地址来识别不同的节点，而在 IP 层我们也要有一个类似的地址标识，这就是 IP 地址。</p><p>32 位 IP 地址（IPv4 地址的点分十进制表示）分为网络位和地址位，这样做可以减少路由器中路由表记录的数目，有了网络地址，就可以限定拥有相同网络地址的终端都在同一个范围内，那么路由表只需要维护一条这个网络地址的方向，就可以找到相应的这些终端了。</p><p>当互联网规律很小时，类别信息被编码进 IP 地址：</p><table tabindex="0"><thead><tr><th style="text-align:left;">IP 地址类别</th><th style="text-align:left;">首字节</th><th style="text-align:left;">网络号 Bit 数</th><th style="text-align:left;">主机号 Bit 数</th><th style="text-align:left;">理论地址范围</th><th style="text-align:left;">预期用途</th></tr></thead><tbody><tr><td style="text-align:left;">A 类地址</td><td style="text-align:left;"><code>0xxx xxxx</code></td><td style="text-align:left;">8</td><td style="text-align:left;">24</td><td style="text-align:left;"><code>1.0.0.0</code> ~ <code>126.255.255.255</code></td><td style="text-align:left;">特大网络的单播传输</td></tr><tr><td style="text-align:left;">B 类地址</td><td style="text-align:left;"><code>10xx xxxx</code></td><td style="text-align:left;">16</td><td style="text-align:left;">16</td><td style="text-align:left;"><code>128.0.0.0</code> ~ <code>191.255.255.255</code></td><td style="text-align:left;">数千台中大型网络的单播传输</td></tr><tr><td style="text-align:left;">C 类地址</td><td style="text-align:left;"><code>110x xxxx</code></td><td style="text-align:left;">24</td><td style="text-align:left;">8</td><td style="text-align:left;"><code>192.0.0.0</code> ~ <code>223.255.255.255</code></td><td style="text-align:left;">250 台主机以下小型网络的单播传输</td></tr><tr><td style="text-align:left;">D 类地址</td><td style="text-align:left;"><code>1110 xxxx</code></td><td style="text-align:left;">n/a</td><td style="text-align:left;">n/a</td><td style="text-align:left;"><code>224.0.0.0</code> ~ <code>239.255.255.255</code></td><td style="text-align:left;">IP 多播</td></tr><tr><td style="text-align:left;">E 类地址</td><td style="text-align:left;"><code>1111 xxxx</code></td><td style="text-align:left;">n/a</td><td style="text-align:left;">n/a</td><td style="text-align:left;"><code>240.0.0.0</code> ~ <code>255.255.255.255</code></td><td style="text-align:left;">预留实验用</td></tr></tbody></table><h2 id="cidr-子网掩码" tabindex="-1">CIDR 子网掩码 <a class="header-anchor" href="#cidr-子网掩码" aria-label="Permalink to &quot;CIDR 子网掩码&quot;">​</a></h2><p>无类别域间路由（Classless Inter-Domain Routing，CIDR）是一个用于给用户分配 IP 地址以及在互联网上有效地路由 IP 数据包的对 IP 地址进行归类的方法。</p><p>表示方法：<code>A.B.C.D/N</code>（N 的范围 <code>[0, 32]</code>）</p><h2 id="链路层-mac-地址" tabindex="-1">链路层 MAC 地址 <a class="header-anchor" href="#链路层-mac-地址" aria-label="Permalink to &quot;链路层 MAC 地址&quot;">​</a></h2><ul><li>链路层地址 MAC（Media Access Control Address） <ul><li>实现本地网络设备间的直接传输</li></ul></li><li>网络层地址 IP（Internet Protocol address） <ul><li>实现大型网络间的传输</li></ul></li></ul><p>查看 MAC 地址：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Window</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ipconfig</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> all</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Linux</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ifconfig</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="地址解析协议-arp" tabindex="-1">地址解析协议 ARP <a class="header-anchor" href="#地址解析协议-arp" aria-label="Permalink to &quot;地址解析协议 ARP&quot;">​</a></h2><p>动态地址解析协议（Address Resolution Protocol，ARP）是根据 IP 地址获取 MAC 地址的一种协议。</p><p>简单的来说 ARP 的作用就是把 IP 地址映射为物理地址，而与之相反的 RARP（逆向 ARP）就是将物理地址映射为 IP 地址。</p><h2 id="nat-地址转换" tabindex="-1">NAT 地址转换 <a class="header-anchor" href="#nat-地址转换" aria-label="Permalink to &quot;NAT 地址转换&quot;">​</a></h2><p>网络地址转换（Network Address Translation，缩写：NAT；又称网络掩蔽、IP 掩蔽）在计算机网络中是一种在 IP 数据包通过路由器或防火墙时重写来源 IP 地址或目的 IP 地址的技术。这种技术被普遍使用在有多台主机但只通过一个公有 IP 地址访问互联网的私有网络中。它是一个方便且得到了广泛应用的技术。当然，NAT 也让主机之间的通信变得复杂，导致了通信效率的降低。</p><h2 id="ipv6" tabindex="-1">IPv6 <a class="header-anchor" href="#ipv6" aria-label="Permalink to &quot;IPv6&quot;">​</a></h2><p>网际协议第 6 版（英语：Internet Protocol version 6，缩写：IPv6）是网际协议的最新版本，用作互联网的协议。用它来取代 IPv4 主要是为了解决 IPv4 地址枯竭问题，同时它也在其他方面对于 IPv4 有许多改进。</p><p>IPv6 目的：</p><ul><li>更大的地址空间：128 位长度</li><li>更好的地址空间管理</li><li>消除 NAT 等寻址技术</li><li>更简易的 IP 配置管理</li><li>优秀的选路设计</li><li>更好的多播支持</li><li>安全性</li><li>移动性</li></ul><h3 id="格式" tabindex="-1">格式 <a class="header-anchor" href="#格式" aria-label="Permalink to &quot;格式&quot;">​</a></h3><p>IPv6 二进位制下为 128 位长度，以 16 位为一组，每组以冒号 <code>:</code> 隔开，可以分为 8 组，每组以 4 位十六进制方式表示。</p><p>例如：<code>2001:0db8:86a3:08d3:1319:8a2e:0370:7344</code> 是一个合法的 IPv6 地址。</p><p>类似于 IPv4 的点分十进制，同样也存在点分十六进制的写法，将 8 组 4 位十六进制地址的冒号去除后，每位以点号 <code>.</code> 分组。</p><p>例如：<code>2001:0db8:85a3:08d3:1319:8a2e:0370:7344</code> 则记为 <code>2.0.0.1.0.d.b.8.8.5.a.3.0.8.d.3.1.3.1.9.8.a.2.e.0.3.7.0.7.3.4.4</code>，其倒序写法用于 <code>ip6.arpa</code> 子域名记录 IPv6 地址与域名的映射。</p><p>同时 IPv6 在某些条件下可以省略：</p><ol><li>每项数字前导的 0 可以省略，省略后前导数字仍是 0 则继续，例如下组 IPv6 是等价的。</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2001:0DB8:02de:0000:0000:0000:0000:0e13</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2001:DB8:2de:0000:0000:0000:0000:e13</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2001:DB8:2de:000:000:000:000:e13</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2001:DB8:2de:00:00:00:00:e13</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2001:DB8:2de:0:0:0:0:e13</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="2"><li>可以用双冒号 <code>::</code> 表示一组 <code>0</code> 或多组连续的 <code>0</code>，但只能出现一次：</li></ol><ul><li>如果四组数字都是零，可以被省略。遵照以上省略规则，下面这两组 IPv6 都是相等的。</li></ul><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2001:DB8:2de:0:0:0:0:e13</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2001:DB8:2de::e13</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2001:0DB8:0000:0000:0000:0000:1428:57ab</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2001:0DB8:0000:0000:0000::1428:57ab</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2001:0DB8:0:0:0:0:1428:57ab</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2001:0DB8:0::0:1428:57ab</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2001:0DB8::1428:57ab</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li><code>2001::25de::cade</code> 是非法的，因为双冒号出现了两次。它有可能是下种情形之一，造成无法推断。</li></ul><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2001:0000:0000:0000:0000:25de:0000:cade</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2001:0000:0000:0000:25de:0000:0000:cade</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2001:0000:0000:25de:0000:0000:0000:cade</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2001:0000:25de:0000:0000:0000:0000:cade</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>如果这个地址实际上是 IPv4 的地址，后 32 位可以用 10 进制数表示；因此 <code>::ffff:192.168.89.9</code> 相等于 <code>::ffff:c0a8:5909</code>。 另外，<code>::ffff:1.2.3.4</code> 格式叫做 IPv4 映射地址。</p><p>IPv4 位址可以很容易的转化为 IPv6 格式。举例来说，如果 IPv4 的一个地址为 <code>135.75.43.52</code>（十六进制为 <code>0x874B2B34</code>），它可以被转化为 <code>0000:0000:0000:0000:0000:FFFF:874B:2B34</code> 或者 <code>::FFFF:874B:2B34</code>。同时，还可以使用混合符号（IPv4-compatible address），则地址可以为 <code>::ffff:135.75.43.52</code>。</p>`,44),n=[i];function d(p,r,o,c,h,b){return t(),a("div",null,n)}const g=e(l,[["render",d]]);export{u as __pageData,g as default};
