import{_ as t,c as e,o as l,a3 as d}from"./chunks/framework.qnZckW2M.js";const c=JSON.parse('{"title":"HTTP 状态码","description":"","frontmatter":{"nav":{"title":"计算机网络","order":8},"group":{"title":"HTTP","order":3},"title":"HTTP 状态码","order":5},"headers":[],"relativePath":"KnowledgeBase/FrontEnd/JavaScript/computer-networks/http/HTTP 状态码.md","filePath":"KnowledgeBase/FrontEnd/JavaScript/computer-networks/http/HTTP 状态码.md","lastUpdated":1719742520000}'),n={name:"KnowledgeBase/FrontEnd/JavaScript/computer-networks/http/HTTP 状态码.md"},r=d('<h1 id="http-状态码" tabindex="-1">HTTP 状态码 <a class="header-anchor" href="#http-状态码" aria-label="Permalink to &quot;HTTP 状态码&quot;">​</a></h1><p><a href="https://datatracker.ietf.org/doc/html/rfc7231" target="_blank" rel="noreferrer">RFC</a> 规定 HTTP 的状态码为三位数，被分为五类：</p><ul><li><strong>1xx</strong>：表示目前是协议处理的中间状态，还需要后续操作</li><li><strong>2xx</strong>：表示成功状态</li><li><strong>3xx</strong>：重定向状态，资源位置发生变动，需要重新请求</li><li><strong>4xx</strong>：请求报文有误</li><li><strong>5xx</strong>：服务端发生错误</li></ul><h2 id="_1xx-informational-信息化" tabindex="-1">1xx Informational 信息化 <a class="header-anchor" href="#_1xx-informational-信息化" aria-label="Permalink to &quot;1xx Informational 信息化&quot;">​</a></h2><p>表示临时响应并需要请求者继续执行操作的状态代码。</p><table tabindex="0"><thead><tr><th style="text-align:left;">状态码</th><th style="text-align:left;">含义</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">100</td><td style="text-align:left;">Continue</td><td style="text-align:left;">（<strong>继续</strong>）请求者应当继续提出请求。 服务器返回此代码表示已收到请求的第一部分，正在等待其余部分。</td></tr><tr><td style="text-align:left;">101</td><td style="text-align:left;">Switching Protocols</td><td style="text-align:left;">（<strong>交换协议</strong>）请求者已要求服务器切换协议，服务器已确认并准备切换。</td></tr><tr><td style="text-align:left;">102</td><td style="text-align:left;">Processing</td><td style="text-align:left;">（<strong>处理中</strong>）该代码表示服务器已经收到并正在处理请求，但无响应可用。[<a href="https://zh.wikipedia.org/wiki/HTTP%E7%8A%B6%E6%80%81%E7%A0%81#cite_note-RFC_2518-6" target="_blank" rel="noreferrer">6]</a>这样可以防止客户端超时，并假设请求丢失。</td></tr></tbody></table><h2 id="_2xx-success-成功" tabindex="-1">2xx Success 成功 <a class="header-anchor" href="#_2xx-success-成功" aria-label="Permalink to &quot;2xx Success 成功&quot;">​</a></h2><p>表示成功处理了请求的状态代码。</p><table tabindex="0"><thead><tr><th style="text-align:left;">状态码</th><th style="text-align:left;">含义</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>200</strong></td><td style="text-align:left;">OK</td><td style="text-align:left;">（<strong>成功</strong>）服务器已成功处理了请求。 通常，这表示服务器提供了请求的网页。</td></tr><tr><td style="text-align:left;">201</td><td style="text-align:left;">Created</td><td style="text-align:left;">（<strong>已创建</strong>）请求成功并且服务器创建了新的资源。</td></tr><tr><td style="text-align:left;">202</td><td style="text-align:left;">Accepted</td><td style="text-align:left;">（<strong>已接受</strong>）服务器已接受请求，但尚未处理。</td></tr><tr><td style="text-align:left;">203</td><td style="text-align:left;">Non-Authoritative Information</td><td style="text-align:left;">（<strong>非授权信息</strong>）服务器已成功处理了请求，但返回的信息可能来自另一来源。</td></tr><tr><td style="text-align:left;">204</td><td style="text-align:left;">No Content</td><td style="text-align:left;">（<strong>无内容</strong>）服务器成功处理了请求，但没有返回任何内容。</td></tr><tr><td style="text-align:left;">205</td><td style="text-align:left;">Reset Content</td><td style="text-align:left;">（<strong>重置内容</strong>）服务器成功处理了请求，但没有返回任何内容。</td></tr><tr><td style="text-align:left;">206</td><td style="text-align:left;">Partial Content</td><td style="text-align:left;">（<strong>部分内容</strong>）服务器成功处理了部分 GET 请求。使用场景为 HTTP 分块下载和断点续传，当然也会带上相应的响应头 <code>Content-Range</code>。</td></tr><tr><td style="text-align:left;">207</td><td style="text-align:left;">Multi-Status</td><td style="text-align:left;">（<strong>多状态</strong>）代表之后的消息体将是一个 XML 消息，并且可能依照之前子请求数量的不同，包含一系列独立的响应代码。</td></tr><tr><td style="text-align:left;">208</td><td style="text-align:left;">Already Reported</td><td style="text-align:left;">（<strong>已报告</strong>）DAV 绑定的成员已经在（多状态）响应之前的部分被列举，且未被再次包含。</td></tr><tr><td style="text-align:left;">226</td><td style="text-align:left;">IM Used</td><td style="text-align:left;">（<strong>使用的</strong>）服务器已经满足了对资源的请求，对实体请求的一个或多个实体操作的结果表示。</td></tr></tbody></table><h2 id="_3xx-redirection-重定向" tabindex="-1">3xx Redirection 重定向 <a class="header-anchor" href="#_3xx-redirection-重定向" aria-label="Permalink to &quot;3xx Redirection 重定向&quot;">​</a></h2><p>表示要完成请求，需要进一步操作。 通常，这些状态代码用来重定向。</p><table tabindex="0"><thead><tr><th style="text-align:left;">状态码</th><th style="text-align:left;">含义</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">300</td><td style="text-align:left;">Multiple Choices</td><td style="text-align:left;">（<strong>多种选择</strong>）针对请求，服务器可执行多种操作。服务器可根据请求者选择一项操作，或提供操作列表供请求者选择</td></tr><tr><td style="text-align:left;"><strong>301</strong></td><td style="text-align:left;">Moved Permanently</td><td style="text-align:left;">（<strong>永久重定向</strong>）请求的网页已永久移动到新位置。服务器返回此响应时，会自动将请求者转到新位置（响应头 Location 为新 URL）</td></tr><tr><td style="text-align:left;"><strong>302</strong></td><td style="text-align:left;">Found</td><td style="text-align:left;">（<strong>临时重定向</strong>）请求的网页已转移到新 URL，Location 首部返回新的 URL，但请求者后续仍然使用原有位置来进行请求</td></tr><tr><td style="text-align:left;">303</td><td style="text-align:left;">See Other</td><td style="text-align:left;">（<strong>查看其他位置</strong>）请求者应当对不同的位置使用单独的 GET 请求来检索响应时，服务器返回此代码</td></tr><tr><td style="text-align:left;"><strong>304</strong></td><td style="text-align:left;">Not Modified</td><td style="text-align:left;">（<strong>未修改</strong>）自从上次请求后，请求的网页未修改过。 服务器返回此响应时，不会返回网页内容</td></tr><tr><td style="text-align:left;">305</td><td style="text-align:left;">Use Proxy</td><td style="text-align:left;">（<strong>使用代理</strong>）请求者只能使用代理访问请求的网页。 如果服务器返回此响应，还表示请求者应使用代理</td></tr><tr><td style="text-align:left;">307</td><td style="text-align:left;">Temporary Redirect</td><td style="text-align:left;">（<strong>临时重定向</strong>）与 302 类似，唯一区别是不允许将请求方法从 POST 改为 GET</td></tr><tr><td style="text-align:left;">308</td><td style="text-align:left;">Permanent Redirect</td><td style="text-align:left;">（<strong>永久重定向</strong>） 请求和所有将来的请求应该使用另一个 URI 重复</td></tr></tbody></table><h2 id="_4xx-client-error-客户端错误" tabindex="-1">4xx Client Error 客户端错误 <a class="header-anchor" href="#_4xx-client-error-客户端错误" aria-label="Permalink to &quot;4xx Client Error 客户端错误&quot;">​</a></h2><p>这些状态代码表示请求可能出错，妨碍了服务器的处理。</p><table tabindex="0"><thead><tr><th style="text-align:left;">状态码</th><th style="text-align:left;">含义</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>400</strong></td><td style="text-align:left;">Bad Request</td><td style="text-align:left;">（<strong>错误请求</strong>）服务器不理解请求的语法。</td></tr><tr><td style="text-align:left;">401</td><td style="text-align:left;">Unauthorized</td><td style="text-align:left;">（<strong>未授权</strong>）请求要求身份验证。 对于需要登录的网页，服务器可能返回此响应。</td></tr><tr><td style="text-align:left;">402</td><td style="text-align:left;">Payment Required</td><td style="text-align:left;">（<strong>需要付费</strong>）</td></tr><tr><td style="text-align:left;"><strong>403</strong></td><td style="text-align:left;">Forbidden</td><td style="text-align:left;">（<strong>禁止</strong>）服务器拒绝请求。比如法律禁止、信息敏感等等。</td></tr><tr><td style="text-align:left;"><strong>404</strong></td><td style="text-align:left;">Not Found</td><td style="text-align:left;">（<strong>未找到</strong>）服务器找不到请求的网页。</td></tr><tr><td style="text-align:left;">405</td><td style="text-align:left;">Method Not Allowed</td><td style="text-align:left;">（<strong>不允许的方法</strong>）禁用请求中指定的方法。</td></tr><tr><td style="text-align:left;">406</td><td style="text-align:left;">Not Acceptable</td><td style="text-align:left;">（<strong>不可接受</strong>）无法使用请求的内容特性响应请求的网页。</td></tr><tr><td style="text-align:left;">407</td><td style="text-align:left;">Proxy Authentication Required</td><td style="text-align:left;">（<strong>需要代理授权</strong>）此状态代码与 401（未授权）类似，但指定请求者应当授权使用代理。</td></tr><tr><td style="text-align:left;">408</td><td style="text-align:left;">Request Timeout</td><td style="text-align:left;">（<strong>请求超时</strong>）服务器等候请求时发生超时。</td></tr><tr><td style="text-align:left;">409</td><td style="text-align:left;">Conflict</td><td style="text-align:left;">（<strong>冲突</strong>）服务器在完成请求时发生冲突。 服务器必须在响应中包含有关冲突的信息。</td></tr><tr><td style="text-align:left;">410</td><td style="text-align:left;">Gone</td><td style="text-align:left;">（<strong>已删除</strong>）如果请求的资源已永久删除，服务器就会返回此响应。</td></tr><tr><td style="text-align:left;">411</td><td style="text-align:left;">Length Required</td><td style="text-align:left;">（<strong>需要有效长度</strong>）服务器不接受不含有效内容长度标头字段的请求。</td></tr><tr><td style="text-align:left;">412</td><td style="text-align:left;">Precondition Failed</td><td style="text-align:left;">（<strong>未满足前提条件</strong>）服务器未满足请求者在请求中设置的其中一个前提条件。</td></tr><tr><td style="text-align:left;">413</td><td style="text-align:left;">Payload Too Large</td><td style="text-align:left;">（<strong>请求实体过大</strong>）服务器无法处理请求，因为请求实体过大，超出服务器的处理能力。</td></tr><tr><td style="text-align:left;">414</td><td style="text-align:left;">URI Too Long</td><td style="text-align:left;">（<strong>请求的 URI 过长</strong>）请求的 URI（通常为网址）过长，服务器无法处理。</td></tr><tr><td style="text-align:left;">415</td><td style="text-align:left;">Unsupported Media Type</td><td style="text-align:left;">（<strong>不支持的媒体类型</strong>）请求的格式不受请求页面的支持。</td></tr><tr><td style="text-align:left;">416</td><td style="text-align:left;">Range Not Satisfiable</td><td style="text-align:left;">（<strong>请求范围不符合要求</strong>）如果页面无法提供请求的范围，则服务器会返回此状态代码。</td></tr><tr><td style="text-align:left;">417</td><td style="text-align:left;">Expectation Failed</td><td style="text-align:left;">（<strong>未满足期望值</strong>）服务器未满足&quot;期望&quot;请求标头字段的要求。</td></tr><tr><td style="text-align:left;">422</td><td style="text-align:left;">Unprocessable Entity</td><td style="text-align:left;">**（不可处理的实体）**请求格式正确，但是由于含有语义错误，无法响应。</td></tr><tr><td style="text-align:left;">423</td><td style="text-align:left;">Locked</td><td style="text-align:left;">**（已锁定）**当前资源被锁定。</td></tr><tr><td style="text-align:left;">424</td><td style="text-align:left;">Failed Dependency</td><td style="text-align:left;">**（失败的依赖）**由于之前的某个请求发生的错误，导致当前请求失败。</td></tr><tr><td style="text-align:left;">431</td><td style="text-align:left;">Request Header Fields Too Large</td><td style="text-align:left;">**（请求头过大）**请求头的字段内容太大。</td></tr></tbody></table><h2 id="_5xx-server-error-服务端错误" tabindex="-1">5xx Server Error 服务端错误 <a class="header-anchor" href="#_5xx-server-error-服务端错误" aria-label="Permalink to &quot;5xx Server Error 服务端错误&quot;">​</a></h2><p>这些状态代码表示服务器在尝试处理请求时发生内部错误。 这些错误可能是服务器本身的错误，而不是请求出错。</p><table tabindex="0"><thead><tr><th style="text-align:left;">状态码</th><th style="text-align:left;">说明</th><th style="text-align:left;"></th></tr></thead><tbody><tr><td style="text-align:left;"><strong>500</strong></td><td style="text-align:left;">Internal Server Error</td><td style="text-align:left;">（<strong>服务器内部错误）</strong>） 通用错误消息，服务器遇到了一个未曾预料的状况，导致了它无法完成对请求的处理。</td></tr><tr><td style="text-align:left;">501</td><td style="text-align:left;">Not Implemented</td><td style="text-align:left;">（<strong>未执行</strong>）服务器不具备完成请求的功能。 例如，服务器无法识别请求方法时可能会返回此代码。</td></tr><tr><td style="text-align:left;"><strong>502</strong></td><td style="text-align:left;">Bad Gateway</td><td style="text-align:left;">（<strong>错误网关</strong>）服务器作为网关或代理，从上游服务器收到无效响应。</td></tr><tr><td style="text-align:left;">503</td><td style="text-align:left;">Service Unavailable</td><td style="text-align:left;">（<strong>服务不可用</strong>）服务器目前无法使用（由于超载或停机维护）。通常，这只是暂时状态。</td></tr><tr><td style="text-align:left;">504</td><td style="text-align:left;">Gateway Timeout</td><td style="text-align:left;">（<strong>网关超时</strong>）服务器作为网关或代理，但是没有及时从上游服务器收到请求。</td></tr><tr><td style="text-align:left;">505</td><td style="text-align:left;">HTTP Version Not Supported</td><td style="text-align:left;">（<strong>HTTP 版本不受支持</strong>）服务器不支持请求中所用的 HTTP 协议版本。</td></tr><tr><td style="text-align:left;">506</td><td style="text-align:left;">Variant Also Negotiates</td><td style="text-align:left;">（<strong>变体也进行协商</strong>）</td></tr><tr><td style="text-align:left;">507</td><td style="text-align:left;">Insufficient Storage</td><td style="text-align:left;">（<strong>存储空间不足</strong>）服务器无法存储完成请求所必须的内容。</td></tr><tr><td style="text-align:left;">508</td><td style="text-align:left;">Loop Detected</td><td style="text-align:left;">（<strong>检测到循环</strong>）服务器在处理请求时陷入死循环。</td></tr><tr><td style="text-align:left;">509</td><td style="text-align:left;">Bandwidth Limit Exceeded</td><td style="text-align:left;">（<strong>带宽限制超出</strong>）</td></tr><tr><td style="text-align:left;">510</td><td style="text-align:left;">Not Extended</td><td style="text-align:left;">（<strong>未满足</strong>）获取资源所需要的策略并没有被满足。</td></tr><tr><td style="text-align:left;">511</td><td style="text-align:left;">Network Authentication Required</td><td style="text-align:left;">（<strong>网络认证需要</strong>）客户端需要进行身份验证才能获得网络访问权限，旨在限制用户群访问特定网络。</td></tr></tbody></table><blockquote><p>黑体状态码为常见状态码</p></blockquote><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2><ul><li><a href="https://en.wikipedia.org/wiki/List_of_HTTP_status_codes" target="_blank" rel="noreferrer">📖 HTTP Status Codes</a></li></ul>',21),s=[r];function a(g,i,o,x,f,y){return l(),e("div",null,s)}const u=t(n,[["render",a]]);export{c as __pageData,u as default};
